buildscript { 
	repositories {
		mavenCentral()
		maven {
			url "https://repo.comm-unity.at/nexus/content/groups/public"
			content { includeGroupByRegex "at\\.comm_unity.*" }
		}
	}
	dependencies {
		classpath 'at.comm_unity.gradle:publishing-plugin:1.1.0'
	}
}

println "Running Gradle ${gradle.gradleVersion} for ${project.name} with Java " + System.getProperty("java.version") + " (" + System.getProperty("java.home") + ")" 

group = 'at.comm_unity.com.github.jacobono'
version = '1.1.2'

apply plugin: 'groovy'
apply plugin: 'maven-publish'
//apply plugin: 'at.comm_unity.maven-publish-conventions'

java {
    toolchain {
		languageVersion = JavaLanguageVersion.of(8)
    }
	withSourcesJar()
}	

repositories { 
  mavenCentral()
}

sourceSets {
  integTest {
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

configurations {
  integTestCompile.extendsFrom testCompile
  integTestRuntime.extendsFrom testRuntime
}

dependencies {
  implementation 'org.codehaus.groovy:groovy-all:2.2.1'
  implementation 'org.slf4j:slf4j-api:1.7.6'
  implementation 'com.google.inject:guice:3.0'
  implementation 'com.google.inject.extensions:guice-assistedinject:3.0'
  
  testImplementation "org.spockframework:spock-core:0.7-groovy-2.0"
  testImplementation 'cglib:cglib-nodep:2.2'
  testImplementation 'org.objenesis:objenesis:1.2'

  integTestCompile 'org.spockframework:spock-guice:0.7-groovy-2.0'
}

groovydoc {
  docTitle = "Schema Slurping Plugin API"
  link("http://groovy.codehaus.org/gapi/", "groovy.", "org.codehaus.groovy.")
  link("http://docs.oracle.com/javase/7/docs/api/", "java.")
  link("http://google-guice.googlecode.com/svn/trunk/javadoc/", "com.google.")
}

task groovyDocJar(type: Jar, dependsOn: groovydoc) {
  archiveClassifier = 'groovydoc'
  from groovydoc.destinationDir
}

test {
  testLogging {
    events "passed", "skipped", "failed"
  }
}

artifacts {
  archives jar, groovyDocJar
}

// cuRepository* definiert in $HOME/.gradle/gradle.properties
def repositoryUsernamePropName = 'cuRepositoryUser'
def repositoryPasswordPropName = 'cuRepositoryPassword'

publishing {
	repositories {
		maven {
			url "https://repo.comm-unity.at/nexus/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"

			credentials {
				username project.hasProperty(repositoryUsernamePropName) ? project.getProperty(repositoryUsernamePropName) : ''
				password project.hasProperty(repositoryPasswordPropName) ? project.getProperty(repositoryPasswordPropName) : ''
			}
		}
	}

  publications {
    plugin(MavenPublication) {
      from components.java
      
      artifact groovyDocJar
    }
  }
}

task integTest(type: Test) {
  dependsOn(test)
  testClassesDirs = sourceSets.integTest.output.classesDirs
  classpath = sourceSets.integTest.runtimeClasspath
  reports.html.outputLocation = file("${java.testReportDir}/integTests")
  testLogging {
    events "passed", "skipped", "failed"
  }
}

wrapper {
    gradleVersion = '8.6'
}